import logging
from collections.abc import Callable
from configparser import ConfigParser

import wx

class ApiGui(wx.Dialog):
    def __init__(self, config: ConfigParser) -> None:
        self.__aou_service_account: str = None
        self.__awardee: str = None
        self.__config: ConfigParser = None
        self.__log: logging.Logger = None
        self.__project: str = None
        self.__pmi_account: str = None
        self.__token_file: str = None

        self.__buttons_and_text_boxes: dict = {}
        self.__text_boxes_and_buttons: dict = {}

        self.__gauge: wx.Gauge = None
        self.__ok_button: wx.Button = None
        self.__status_text: wx.StaticText = None
    def __add_controls(
        self,
        row: int,
        panel: wx.Panel,
        grid: wx.GridBagSizer,
        label: str,
        default: str,
        text_changed_fn: Callable,
        restore_fn: Callable,
    ) -> None: ...
    def __enable_if_inputs_complete(self) -> None: ...
    def __get_data(self) -> None: ...
    def __get_destination_directory(self) -> str: ...
    def __on_aou_service_account_text_changed(self, event: wx.EVT_TEXT) -> None: ...
    def __on_awardee_text_changed(self, event: wx.EVT_TEXT) -> None: ...
    def __on_cancel_clicked(self, event: wx.EVT_BUTTON) -> None: ...
    def __on_ok_clicked(self, event: wx.EVT_BUTTON) -> None: ...
    def __on_pmi_account_text_changed(self, event: wx.EVT_TEXT) -> None: ...
    def __on_project_text_changed(self, event: wx.EVT_TEXT) -> None: ...
    def __on_restore_aou_service_account_button_clicked(
        self, event: wx.EVT_BUTTON
    ) -> None: ...
    def __on_restore_awardee_button_clicked(self, event: wx.EVT_BUTTON) -> None: ...
    def __on_restore_pmi_account_button_clicked(self, event: wx.EVT_BUTTON) -> None: ...
    def __on_restore_project_button_clicked(self, event: wx.EVT_BUTTON) -> None: ...
    def __on_restore_token_file_button_clicked(self, event: wx.EVT_BUTTON) -> None: ...
    def __on_token_file_text_changed(self, event: wx.EVT_TEXT) -> None: ...
    def __set_progress(self, pct: int) -> None: ...
    def __set_status(self, text: str) -> None: ...
